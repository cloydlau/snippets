{
	// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"KiFormDialog": {
		"prefix": "KiFormDialog",
		"body": [
			"<KiFormDialog title=\"$0\" v-model=\"TODO.data\" :show.sync=\"TODO.show\"",
			"  :retrieve=\"TODO.retrieve\" :submit=\"TODO.submit\" :loading=\"TODO.loading\">",
			"  <template #el-form>",
			"    <el-form-item label=\"\" prop=\"\" verify>",
			"      <el-input v-model.trim=\"form.data.TODO\" maxlength=\"30\" show-word-limit clearable />",
			"    </el-form-item>",
			"    <el-form-item label=\"\" prop=\"\" verify>",
			"      <KiSelect v-model=\"form.data.TODO\" :options=\"[",
			"        { label: '', value: '' },",
			"        { label: '', value: '' },",
			"      ]\" :props=\"{ label: 'label', value: 'value' }\" />",
			"    </el-form-item>",
			"  </template>",
			"</KiFormDialog>"
		],
	},
	"KiFormDialog.data": {
		"prefix": "KiFormDialog.data",
		"body": [
			"TODO: {",
			"  show: false,",
			"  data: {},",
			"  retrieve: () => new Promise((resolve, reject) => {",
			"    this.\\$POST('', {",
			"      id: this.TODO.data.id,",
			"    }).then(({ data }) => {",
			"      this.TODO.data = data || {}",
			"      resolve()",
			"    }).catch(e => {",
			"      reject(e)",
			"    })",
			"  }),",
			"  loading: false,",
			"  submit: () => new Promise((resolve, reject) => {",
			"    this.\\$POST('', this.TODO.data).then(res => {",
			"      resolve()",
			"    }).catch(e => {",
			"      reject(e)",
			"    })",
			"  }),",
			"},"
		],
	},
	"KiFormDialog:readonly": {
		"prefix": "KiFormDialog:readonly",
		"body": [
			"<KiFormDialog title=\"$0\" v-model=\"TODO.data\" :show.sync=\"TODO.show\" readonly",
			"  :retrieve=\"TODO.retrieve\">",
			"  ",
			"</KiFormDialog>"
		],
	},
	"KiFormDialog.data:readonly": {
		"prefix": "KiFormDialog.data:readonly",
		"body": [
			"TODO: {",
			"  show: false,",
			"  data: {},",
			"  retrieve: () => new Promise((resolve, reject) => {",
			"    this.\\$POST('', {",
			"      id: this.TODO.data.id,",
			"    }).then(({ data }) => {",
			"      this.TODO.data = data || {}",
			"      resolve()",
			"    }).catch(e => {",
			"      reject(e)",
			"    })",
			"  }),",
			"},"
		],
	},
	"KiFormDialog:subcomponent": {
		"prefix": "KiFormDialog:subcomponent",
		"body": [
			"<template>",
			"  <KiFormDialog :title=\"formTitle\" v-model=\"form.data\" :show.sync=\"form.show\"",
			"    :submit=\"submitForm\" :loading=\"form.loading\" ref=\"kiFormDialogRef\">",
			"    <template #el-form>",
			"      <el-form-item label=\"\" prop=\"\" verify>",
			"        <el-input v-model.trim=\"form.data.TODO\" maxlength=\"30\" show-word-limit",
			"          clearable />",
			"      </el-form-item>",
			"      <el-form-item label=\"\" prop=\"\" verify>",
			"        <KiSelect v-model=\"form.data.TODO\" :options=\"[",
			"          { label: '', value: '' },",
			"          { label: '', value: '' },",
			"        ]\" :props=\"{ label: 'label', value: 'value' }\" />",
			"      </el-form-item>",
			"    </template>",
			"  </KiFormDialog>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"  props: {",
			"    form: Object,",
			"    formTitle: String,",
			"    submitForm: Function,",
			"  },",
			"}",
			"</script>",
			"",
			"<style lang=\"scss\" scoped>",
			"",
			"</style>"
		],
	},
	"KiSelect:options": {
		"prefix": "KiSelect:options",
		"body": [
			"<KiSelect v-model=\"\" :options=\"[",
			"  { label: '', value: '' },",
			"  { label: '', value: '' },",
			"]\" :props=\"{ label: 'label', value: 'value' }\"/>",
		]
	},
	"KiSelect:search": {
		"prefix": "KiSelect:search",
		"body": [
			"<KiSelect v-model=\"\" :search=\"name => new Promise((resolve, reject) => {",
			"  \\$POST('', { name }).then(({ data }) => {",
			"    resolve(data)",
			"  }).catch(e => {",
			"    reject(e)",
			"  })",
			"})\" :props=\"{ label: 'label', value: 'value' }\" />"
		],
	},
	"KiSelect:index": {
		"prefix": "KiSelect:index",
		"body": [
			"<KiSelect :index.sync=\"\" :options=\"options.TODO\" />"
		],
	},
	":props": {
		"prefix": ":props",
		"body": [
			":props=\"{ label: 'label', value: 'value', }\""
		],
	},
	":options": {
		"prefix": ":options",
		"body": [
			":options=\"[",
			"  { label: '', value: '' },",
			"  { label: '', value: '' },",
			"]\"",
		]
	},
	":search": {
		"prefix": ":search",
		"body": [
			":search=\"name => new Promise((resolve, reject) => {",
			"  \\$POST('', { name }).then(({ data }) => {",
			"    resolve(data)",
			"  }).catch(e => {",
			"    reject(e)",
			"  })",
			"})\""
		],
	},
	"KiPopButton:danger": {
		"prefix": "KiPopButton:danger",
		"body": [
			"<KiPopButton v-if=\"hasBtn['删除']\" text=\"![#FF7575]\"",
			"  :elPopconfirmProps=\"{ title: '确认删除吗？' }\" @click=\"d({ id })\">",
			"  删除",
			"</KiPopButton>"
		],
	},
	"KiPopButton": {
		"prefix": "KiPopButton",
		"body": [
			"<KiPopButton v-if=\"hasBtn['']\" @click=\"TODO({ id })\">",
			"  ",
			"</KiPopButton>"
		],
	},
	"KiPopSwitch": {
		"prefix": "KiPopSwitch",
		"body": [
			"<KiPopSwitch v-bind=\"popSwitchProps(status)\"",
			"  @change=\"updateStatus({ id, status: status ^ 1 })\" />"
		],
	},
}
